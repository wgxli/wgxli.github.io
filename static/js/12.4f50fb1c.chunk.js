(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{456:function(e,t,a){"use strict";a.r(t);var n=a(53),r=a(0),i=a.n(r);a(483);function o(){var e=Object(n.a)(["(mathbb{R}^2)"],["\\(\\mathbb{R}^2\\)"]);return o=function(){return e},e}function c(){var e=Object(n.a)(["(\vec{v})"],["\\(\\vec{v}\\)"]);return c=function(){return e},e}function s(){var e=Object(n.a)(["(mathbb{R}^2)"],["\\(\\mathbb{R}^2\\)"]);return s=function(){return e},e}t.default=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("p",null,"I came upon this realization while reading the book \u2018Category Theory for Programmers.\u2019 Although the book\u2019s clarity definitely helped, I have a feeling that my understanding was a gradual process. It\u2019s been a long time in the making. (And as usual in math, obvious in hindsight.)"),i.a.createElement("p",null,"The fundamental reason the lemma works, and why the hom functor \\(-^a\\) should be in a sense \u2018universal,\u2019 is that the elements of each image \\(x^a\\) are themselves morphisms \\(f : a \\to x\\). As such, each point \\(f \\in x^a\\) contains precisely the information necessary to determine where it should be mapped. Namely, apply the corresponding map \\(F(f)\\) to an arbitrary base point \\(p \\in F(a)\\). The fact this map is forced is aesthetically obvious, and enforced by natrality."),i.a.createElement("p",null,"This is the same logic used to identify the vector space ",String.raw(s())," with the the 2D plane (a set of points), once a basepoint is fixed. Each vector ",String.raw(c())," acts naturally on the plane by translation, so it\u2019s natural to identify it with the image of the basepoint. From this point of view, it\u2019s quite clear why the 2D plane can be identified with ",String.raw(o()),", and why there is exactly one identification corresponding to each possible basepoint in the plane."),i.a.createElement("p",null,"[In fact, if you represent the vector space\u2019s group structure as the hom-set of a one-object category, and identify the plane \\(P\\) with the functor \\(* \\mapsto P\\) mapping vectors (automorphisms on \\(*\\)) to translations (automorphisms on \\(P\\)), this ",i.a.createElement("i",null,"is")," Yoneda\u2019s lemma.]"))}},483:function(e,t,a){"use strict";a.d(t,"e",function(){return l}),a.d(t,"c",function(){return u}),a.d(t,"b",function(){return h}),a.d(t,"d",function(){return m}),a.d(t,"a",function(){return f});var n=a(0),r=a.n(n),i=a(563),o=a(485),c=a(486),s=a(487);a(484);function l(e){var t=e.desktopSource,a=e.mobileSource,n=e.alt;return r.a.createElement(r.a.Fragment,null,r.a.createElement("img",{src:t,className:"desktop",alt:n}),r.a.createElement("img",{src:a,className:"mobile",alt:n}))}function u(e){var t=e.children;return r.a.createElement("section",{className:"footnotes"},r.a.createElement("hr",null),r.a.createElement("h2",null,"Footnotes"),r.a.createElement("ol",null,t))}function h(e){var t=e.children,a=e.id;return r.a.createElement("li",null,r.a.createElement("span",{className:"label"},"[",a,"]"),t,r.a.createElement("a",{className:"reference return",href:"#reference-".concat(a)},"\u21a9"),r.a.createElement("span",{className:"anchor",id:"footnote-".concat(a)}))}function m(e){var t=e.id;return r.a.createElement("a",{className:"reference",href:"#footnote-".concat(t)},r.a.createElement("sup",null,"[",t,"]"),r.a.createElement("span",{className:"anchor",id:"reference-".concat(t)}))}function f(e){var t=e.children,a=e.language,n=e.start;return r.a.createElement(i.a,{language:a,style:s.a,showLineNumbers:!0,startingLineNumber:n||1},t)}i.a.registerLanguage("javascript",o.a),i.a.registerLanguage("python",c.a)},484:function(e,t,a){}}]);
//# sourceMappingURL=12.4f50fb1c.chunk.js.map