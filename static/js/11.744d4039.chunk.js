(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{437:function(e,n,t){"use strict";t.r(n);var r=t(471),i=t(0),a=t.n(i);function u(){var e=Object(r.a)(["[sum_{n=1}^infty \frac{B(n)}{n^2 + n} = sum_{k=0}^infty sum_{n in S_k} \frac{1}{n^2 + n}.]"],["\\[\\sum_{n=1}^\\infty \\frac{B(n)}{n^2 + n} = \\sum_{k=0}^\\infty \\sum_{n \\in S_k} \\frac{1}{n^2 + n}.\\]"]);return u=function(){return e},e}function s(){var e=Object(r.a)(["(k^{\text{th}})"],["\\(k^{\\text{th}}\\)"]);return s=function(){return e},e}n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("p",null,"Here\u2019s a nice solution of Putnam 1981 B5 that I haven\u2019t seen anywhere else (so far). The main idea is to sum `bitwise,' rather than `termwise.'"),a.a.createElement("p",null,"Let \\(S_k\\) denote the set of positive integers with the ",String.raw(s())," bit set, counting from the right starting at \\(k=0\\). Then we have"),String.raw(u()))}},471:function(e,n,t){"use strict";function r(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}t.d(n,"a",function(){return r})}}]);
//# sourceMappingURL=11.744d4039.chunk.js.map