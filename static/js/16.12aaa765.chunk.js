(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{448:function(n,e,t){"use strict";t.r(e);var r=t(53),a=t(0),i=t.n(a);function o(){var n=Object(r.a)(["(lfloor 2^{-k} n\rfloor = 2m+1)"],["\\(\\lfloor 2^{-k} n\\rfloor = 2m+1\\)"]);return o=function(){return n},n}function u(){var n=Object(r.a)(["[sum_{n=1}^infty \frac{B(n)}{n^2 + n} = sum_{k=0}^infty sum_{n in S_k} \frac{1}{n^2 + n}.]"],["\\[\\sum_{n=1}^\\infty \\frac{B(n)}{n^2 + n} = \\sum_{k=0}^\\infty \\sum_{n \\in S_k} \\frac{1}{n^2 + n}.\\]"]);return u=function(){return n},n}e.default=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("p",null,"Here\u2019s a nice solution of Putnam 1981 B5 that I haven\u2019t seen anywhere else (so far). The  main idea is to sum `bitwise,' rather than `termwise.'"),i.a.createElement("p",null,"Let \\(S_k\\) denote the set of positive integers with the \\(k\\)",i.a.createElement("sup",null,"th")," bit set, counting from the right starting at \\(k=0\\). Then we have"),i.a.createElement("p",null,String.raw(u())),i.a.createElement("p",null,"A bit of thinking shows that \\(n \\in S_k\\) if and only if ",String.raw(o())," is odd. Thus the sum becomes"))}}}]);
//# sourceMappingURL=16.12aaa765.chunk.js.map