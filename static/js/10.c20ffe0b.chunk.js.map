{"version":3,"sources":["pages/Blog/posts/2020-08-20-prime-tangents/intro.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","href","String","raw","_templateObject","_templateObject2","_taggedTemplateLiteral","strings","slice","Object","freeze","defineProperties","value","__webpack_require__","d"],"mappings":"yeAGeA,EAAA,mBACX,OAAOC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+CAAR,mCAAf,iDAAgJ,qBAAhJ,wCADG,4DAGHJ,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,0BAAkB,iBAAlB,qBAAgDF,EAAAC,EAAAC,cAAA,iBAAhD,0KAGCG,OAAOC,IAPLC,KAQHP,EAAAC,EAAAC,cAAA,gCACCG,OAAOC,IATLE,yCCJI,SAAAC,EAAAC,EAAAJ,GAKf,OAJAA,IACAA,EAAAI,EAAAC,MAAA,IAGAC,OAAAC,OAAAD,OAAAE,iBAAAJ,EAAA,CACAJ,IAAA,CACAS,MAAAH,OAAAC,OAAAP,OAPAU,EAAAC,EAAAlB,EAAA,sBAAAU","file":"static/js/10.c20ffe0b.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function() {\n    return <>\n        <p>Inspired by <a href='https://www.youtube.com/watch?v=A7eJb8n8zAw'>Matt Parker’s recent video</a>, I decided to search for primes \\(p\\) with {'\\\\(\\\\tan{p} > p\\\\)'}, the first of which is the 46-digit</p>\n        \\[p = 1169809367327212570704813632106852886389036911.\\]\n        <p>How do you go about finding more?</p>\n        <p>Well, we want {'\\\\(\\\\tan{p}\\\\)'} to be big — <i>very</i> big.\n        From high-school trigonometry, we know that this occurs when \\(p\\) is just a tiny bit less than a half-integer multiple of \\(\\pi\\). In other words, we want\n        </p>\n        {String.raw`\\[p + \\epsilon = \\left(k + \\frac{1}{2}\\right) \\pi,\\]`}\n        <p>which rearranges to</p>\n        {String.raw`\\[\\pi = \\frac{2p}{2k + 1} + \\frac{2\\epsilon}{2k+1}.\\]`}\n    </>;\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"sourceRoot":""}