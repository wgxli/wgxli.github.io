{"version":3,"sources":["pages/Blog/posts/2020-08-01-kernel-averaging/intro.js","pages/Blog/posts/util.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_util_js__WEBPACK_IMPORTED_MODULE_1__","a","createElement","Fragment","id","d","ResponsiveImage","Footnotes","Footnote","Ref","Code","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_1__","react_syntax_highlighter_dist_esm_languages_hljs_javascript__WEBPACK_IMPORTED_MODULE_2__","react_syntax_highlighter_dist_esm_languages_hljs_python__WEBPACK_IMPORTED_MODULE_3__","react_syntax_highlighter_dist_esm_styles_hljs_a11y_dark__WEBPACK_IMPORTED_MODULE_4__","_ref","desktopSource","mobileSource","alt","src","className","_ref2","children","_ref3","href","concat","_ref4","_ref5","language","start","style","a11ydark","showLineNumbers","startingLineNumber","SyntaxHighlighter","registerLanguage","js","python"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAKeE,EAAA,mBACX,OAAOE,EAAAG,EAAAC,cAAAJ,EAAAG,EAAAE,SAAA,KACHL,EAAAG,EAAAC,cAAA,mEACAJ,EAAAG,EAAAC,cAAA,+UACAJ,EAAAG,EAAAC,cAAA,gQAAuPJ,EAAAG,EAAAC,cAACF,EAAA,EAAD,CAAKI,GAAI,IAAhQ,+DAA8T,mBAA9T,8CCTRV,EAAAW,EAAAT,EAAA,sBAAAU,IAAAZ,EAAAW,EAAAT,EAAA,sBAAAW,IAAAb,EAAAW,EAAAT,EAAA,sBAAAY,IAAAd,EAAAW,EAAAT,EAAA,sBAAAa,IAAAf,EAAAW,EAAAT,EAAA,sBAAAc,IAAA,IAAAb,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAc,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAA,KAAAoB,EAAApB,EAAA,KAAAA,EAAA,KAcA,SAASY,EAATS,GAA6D,IAAnCC,EAAmCD,EAAnCC,cAAeC,EAAoBF,EAApBE,aAAcC,EAAMH,EAANG,IACnD,OAAOpB,EAAAG,EAAAC,cAAAJ,EAAAG,EAAAE,SAAA,KACHL,EAAAG,EAAAC,cAAA,OAAKiB,IAAKH,EAAeI,UAAU,UAAUF,IAAKA,IAClDpB,EAAAG,EAAAC,cAAA,OAAKiB,IAAKF,EAAcG,UAAU,SAASF,IAAKA,KAKxD,SAASX,EAATc,GAA+B,IAAXC,EAAWD,EAAXC,SAChB,OAAOxB,EAAAG,EAAAC,cAAA,WAASkB,UAAU,aACtBtB,EAAAG,EAAAC,cAAA,WACAJ,EAAAG,EAAAC,cAAA,uBACAJ,EAAAG,EAAAC,cAAA,UACKoB,IAKb,SAASd,EAATe,GAAkC,IAAfD,EAAeC,EAAfD,SAAUlB,EAAKmB,EAALnB,GACzB,OAAON,EAAAG,EAAAC,cAAA,UACHJ,EAAAG,EAAAC,cAAA,QAAMkB,UAAU,SAAhB,IAA0BhB,EAA1B,KACCkB,EACDxB,EAAAG,EAAAC,cAAA,KAAGkB,UAAU,mBAAmBI,KAAI,cAAAC,OAAgBrB,IAApD,UACAN,EAAAG,EAAAC,cAAA,QAAMkB,UAAU,SAAShB,GAAE,YAAAqB,OAAcrB,MAIjD,SAASK,EAATiB,GAAmB,IAALtB,EAAKsB,EAALtB,GACV,OAAON,EAAAG,EAAAC,cAAA,KACHkB,UAAU,YACVI,KAAI,aAAAC,OAAerB,IAEnBN,EAAAG,EAAAC,cAAA,eAAOE,EAAP,KACAN,EAAAG,EAAAC,cAAA,QAAMkB,UAAU,SAAShB,GAAE,aAAAqB,OAAerB,MAIlD,SAASM,EAATiB,GAA2C,IAA5BL,EAA4BK,EAA5BL,SAAUM,EAAkBD,EAAlBC,SAAUC,EAAQF,EAARE,MAC/B,OAAO/B,EAAAG,EAAAC,cAACS,EAAA,EAAD,CACHiB,SAAUA,EACVE,MAAOC,IACPC,iBAAe,EACfC,mBAAoBJ,GAAS,GAE5BP,GAhDTY,IAAkBC,iBAAiB,aAAcC,KACjDF,IAAkBC,iBAAiB,SAAUE","file":"static/js/8.4abb66f6.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Ref} from '../util.js';\n\n\nexport default function() {\n    return <>\n        <p>How do you average (or sum) a lot of numbers, quickly?</p>\n        <p>More precisely, how do you do this on a webpage, preferably in real-time, when your values are stored as pixels in a large image? In general-purpose applications, we have access to the massive parallelization capabilities of GPUs with CUDA or OpenCL — but on the web, we’re stuck with WebGL and fragment shaders.</p>\n        <p>One possibility is to write a fragment shader that repeatedly downscales the image by a factor of 2, where each output pixel is the average of the four pixels in its preimage. Assuming each render takes constant time due to GPU parallelization,<Ref id={1}/> this technique can average an \\(n \\times n\\) texture in {'\\\\(\\\\log_2{n}\\\\)'} time.</p>\n    </>;\n}\n","import React from 'react';\n\nimport {Light as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport python from 'react-syntax-highlighter/dist/esm/languages/hljs/python';\nimport a11ydark from 'react-syntax-highlighter/dist/esm/styles/hljs/a11y-dark';\n\nimport './footnotes.css';\n\n\nSyntaxHighlighter.registerLanguage('javascript', js);\nSyntaxHighlighter.registerLanguage('python', python);\n\n\nfunction ResponsiveImage({desktopSource, mobileSource, alt}) {\n    return <>\n        <img src={desktopSource} className='desktop' alt={alt}/>\n        <img src={mobileSource} className='mobile' alt={alt}/>\n    </>;\n}\n\n\nfunction Footnotes({children}) {\n    return <section className='footnotes'>\n        <hr/>\n        <h2>Footnotes</h2>\n        <ol>\n            {children}\n        </ol>\n    </section>;\n}\n\nfunction Footnote({children, id}) {\n    return <li>\n        <span className='label'>[{id}]</span>\n        {children}\n        <a className='reference return' href={`#reference-${id}`}>↩</a>\n        <span className='anchor' id={`footnote-${id}`}/>\n    </li>;\n}\n\nfunction Ref({id}) {\n    return <a\n        className='reference'\n        href={`#footnote-${id}`}\n    >\n        <sup>[{id}]</sup>\n        <span className='anchor' id={`reference-${id}`}/>\n    </a>;\n}\n\nfunction Code({children, language, start}) {\n    return <SyntaxHighlighter\n        language={language}\n        style={a11ydark}\n        showLineNumbers\n        startingLineNumber={start || 1}\n    >\n        {children}\n    </SyntaxHighlighter>\n}\n\nexport {\n    ResponsiveImage,\n    Footnotes, Footnote, Ref,\n    Code\n};\n"],"sourceRoot":""}