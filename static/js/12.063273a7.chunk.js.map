{"version":3,"sources":["pages/Blog/posts/2021-05-05-erf-expansion/body.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","String","raw","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","href","_taggedTemplateLiteral","strings","slice","Object","freeze","defineProperties","value","__webpack_require__","d"],"mappings":"s2JAEeA,EAAA,mBACX,OAAOC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,gBAAQE,OAAOC,IAAfC,KAAA,uQACCF,OAAOC,IAFLE,KASHP,EAAAC,EAAAC,cAAA,wHACCE,OAAOC,IAVLG,KAWHR,EAAAC,EAAAC,cAAA,uHACCE,OAAOC,IAZLI,KAgBHT,EAAAC,EAAAC,cAAA,6FACCE,OAAOC,IAjBLK,KAkBHV,EAAAC,EAAAC,cAAA,mMACCE,OAAOC,IAnBLM,KAwBHX,EAAAC,EAAAC,cAAA,oEACCE,OAAOC,IAzBLO,KA0BHZ,EAAAC,EAAAC,cAAA,2JAAiJE,OAAOC,IAAxJQ,KAAA,iMACCT,OAAOC,IA3BLS,KA+BHd,EAAAC,EAAAC,cAAA,yHACCE,OAAOC,IAhCLU,KAqCHf,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,KAAGc,KAAK,6BAAR,4BAA3C,+ECxCO,SAAAC,EAAAC,EAAAb,GAKf,OAJAA,IACAA,EAAAa,EAAAC,MAAA,IAGAC,OAAAC,OAAAD,OAAAE,iBAAAJ,EAAA,CACAb,IAAA,CACAkB,MAAAH,OAAAC,OAAAhB,OAPAmB,EAAAC,EAAA1B,EAAA,sBAAAkB","file":"static/js/12.063273a7.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function() {\n    return <>\n        <p>Let {String.raw`\\(\\omega := e^{i\\pi/4}\\)`}, and parameterize the complex plane via \\(z = r\\omega + s \\, i \\omega\\). Consider the piecewise linear contour travelling from \\(0\\) to \\(r \\omega\\), and then from \\(r \\omega\\) to \\(r \\omega + s \\, i \\omega\\). Using this contour, we compute</p>\n        {String.raw`\\[\\begin{aligned}\n        \\frac{\\sqrt{\\pi}}{2} \\, \\mathrm{erf}(z) &=\n        \\int_0^z e^{-x^2} \\, \\mathrm{d}x \\\\\n        &= \\int_0^r e^{-(t\\omega)^2} \\omega \\, \\mathrm{d}t\n        + \\int_0^s e^{-(r \\omega + t i \\omega)^2} i \\omega \\, \\mathrm{d}t \\\\\n        &= \\omega \\, [C(r) - i \\, S(r)] + i \\omega e^{-ir^2} \\int_0^s e^{2rt + it^2} \\, \\mathrm{d}t,\n        \\end{aligned}\\]`}\n        <p>where \\(S(x)\\) and \\(C(x)\\) are the Fresnel integrals. From Wikipedia, we have the asymptotic expansion</p>\n        {String.raw`\\[C(x) - i \\, S(x) = \\frac{\\sqrt{\\pi}}{2} \\omega^{-1} - [1 + \\mathcal{O}(x^{-4})] \\frac{\\cos{x^2} - i \\sin{x^2}}{2x} \\left[\\frac{1}{2x^2} - i\\right]\\]`}\n        <p>for large positive \\(x\\). The second term is more annoying. For large \\(a > 0\\), consider the integral</p>\n        {String.raw`\\[\\begin{aligned}\n        I_a(x)  &:= e^{-ax} \\int_{-\\infty}^x e^{at} e^{it^2} \\, \\mathrm{d}t \\\\\n        &= a \\int_{-\\infty}^x \\int_x^{\\infty} e^{a \\, (t-s)} e^{it^2} \\, \\mathrm{d}s \\, \\mathrm{d}t.\n        \\end{aligned}\\]`}\n        <p>Making the change of variables \\((u, v) := (a \\, (s-t), \\, x-t)\\), we obtain</p>\n        {String.raw`\\[I_a(x) = \\int_0^\\infty e^{-u} \\int_0^{u/a} e^{i \\, (x-v)^2} \\, \\mathrm{d}v \\, \\mathrm{d}u.\\]`}\n        <p>The inner integral can be evaluated as a sum of four Fresnel integrals, and is therefore bounded by a constant. Then for large \\(a\\), it is fruitful to perform the Taylor expansion</p>\n        {String.raw`\\[\\begin{aligned}\n        \\int_0^{u/a} e^{i \\, (x-v)^2} \\, \\mathrm{d}v &= e^{ix^2} \\int_0^{u/a} e^{-2ixv + iv^2} \\, \\mathrm{d}v \\\\\n        &= e^{ix^2} \\int_0^{u/a} [1 - 2ixv + iv^2 - 2x^2 v^2 + \\mathcal{O}(v^3)] \\, \\mathrm{d}v \\\\\n        &= e^{ix^2} \\left[\\frac{u}{a} - \\frac{ixu^2}{a^2} + \\frac{(i - 2x^2) \\, u^3}{3a^3} + \\mathcal{O}(a^{-4})\\right].\n        \\end{aligned}\\]`}\n        <p>Evaluating the standard gamma integrals, we thus obtain</p>\n        {String.raw`\\[I_a(x) = e^{-ix^2} \\, [a^{-1} - 2ixa^{-2} + (2i-4x^2) \\, a^{-3} + \\mathcal{O}(a^{-4})].\\]`}\n        <p>We were a bit handwavy with the justification for Fubini. Indeed, the above expansion works well for \\(x>0\\), but fails catastrophically for {String.raw`\\(x < 0\\)`}. From the definition of \\(I_a(x)\\), it is evident that small errors in the integral are exponentially amplified for negative \\(x\\). Empirically, however, we find that the approximation</p>\n        {String.raw`\\[\\begin{aligned}\n        \\int_0^x e^{at} e^{it^2} \\, \\mathrm{d}t &= e^{ax} \\, I_a(x) - I_a(0) \\\\\n        &\\approx e^{ax + ix^2} \\, [a^{-1} - 2ixa^{-2} + (2i - 4x^2) \\, a^{-3}] - a^{-1} - 2ia^{-3}\n        \\end{aligned}\\]`}\n        <p>works very well, and could probably be derived rigorously with more effort. Combining all the above, we have</p>\n        {String.raw`\\[\\begin{aligned}\n        \\mathrm{erf}(z) &= \\frac{2}{\\sqrt{\\pi}} \\omega [C(r) - i \\, S(r)] + \\frac{2}{\\sqrt{\\pi}} i\\omega e^{-ir^2} [e^{2rs} I_{2r}(s) - I_{2r}(0)] \\\\\n        &\\approx 1 - \\frac{2}{\\sqrt{\\pi}} \\frac{\\cos{r^2} - i \\sin{r^2}}{2r} \\left[\\frac{1}{2r} - i\\right] \\\\\n        &+ \\frac{i\\omega}{2 \\sqrt{\\pi}} e^{-ir^2} \\left[e^{2rs + is^2} \\left(2r^{-1} -2isr^{-2} + (i + 2s^2) \\, r^{-3}\\right) -2r^{-1} - ir^{-3}\\right],\n        \\end{aligned}\\]`}\n        <p>which is the implementation I use in my <a href=\"/complex-function-plotter\">complex function plotter</a>. (I go up to fourth order in the app.)</p>\n    </>;\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"sourceRoot":""}