(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{442:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),l=t(472);a.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("p",null,"How do you average (or sum) a lot of numbers, quickly?"),r.a.createElement("p",null,"More precisely, how do you do this on a webpage, preferably in real-time, when your values are stored as pixels in a large image? In general-purpose applications, we have access to the massive parallelization capabilities of GPUs with CUDA or OpenCL \u2014 but on the web, we\u2019re stuck with WebGL and fragment shaders."),r.a.createElement("p",null,"One possibility is to write a fragment shader that repeatedly downscales the image by a factor of 2, where each output pixel is the average of the four pixels in its preimage. Assuming each render takes constant time due to GPU parallelization,",r.a.createElement(l.d,{id:1})," this technique can average an \\(n \\times n\\) texture in ","\\(\\log_2{n}\\)"," time."))}},472:function(e,a,t){"use strict";t.d(a,"e",function(){return s}),t.d(a,"c",function(){return u}),t.d(a,"b",function(){return m}),t.d(a,"d",function(){return p}),t.d(a,"a",function(){return f});var n=t(0),r=t.n(n),l=t(547),c=t(474),o=t(475),i=t(476);t(473);function s(e){var a=e.desktopSource,t=e.mobileSource,n=e.alt;return r.a.createElement(r.a.Fragment,null,r.a.createElement("img",{src:a,className:"desktop",alt:n}),r.a.createElement("img",{src:t,className:"mobile",alt:n}))}function u(e){var a=e.children;return r.a.createElement("section",{className:"footnotes"},r.a.createElement("hr",null),r.a.createElement("h2",null,"Footnotes"),r.a.createElement("ol",null,a))}function m(e){var a=e.children,t=e.id;return r.a.createElement("li",null,r.a.createElement("span",{className:"label"},"[",t,"]"),a,r.a.createElement("a",{className:"reference return",href:"#reference-".concat(t)},"\u21a9"),r.a.createElement("span",{className:"anchor",id:"footnote-".concat(t)}))}function p(e){var a=e.id;return r.a.createElement("a",{className:"reference",href:"#footnote-".concat(a)},r.a.createElement("sup",null,"[",a,"]"),r.a.createElement("span",{className:"anchor",id:"reference-".concat(a)}))}function f(e){var a=e.children,t=e.language,n=e.start;return r.a.createElement(l.a,{language:t,style:i.a,showLineNumbers:!0,startingLineNumber:n||1},a)}l.a.registerLanguage("javascript",c.a),l.a.registerLanguage("python",o.a)},473:function(e,a,t){}}]);
//# sourceMappingURL=8.1d31c03e.chunk.js.map